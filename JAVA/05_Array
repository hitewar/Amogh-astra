# 01: Array Theory(collection of similar type of variables)
- Declare an int array variable. is a remote control to an array object.
  Ex. int[] nums;
- Create a new int array with a length of , and assign it to the previously -declared int[] variable nums
  Ex. nums = new int[7];
- Give each elements in the array ans int value. Remember, elements in one
  int array are just int variables.
  Ex. nums[0]= 6;
      nums[1]= 19;
      .....
      nums[6]=1;
- Array are always objects, whether they're declared to hold primitives object references.
#################################################
# 02,03,04 & 05 :Array
#Code Start#
	// Define 
		int a,b,c,d;
		a = 2;		b = 3;		c = 4;		d = 2;
	// Use of Array
		System.out.println("Use of Array");
		int A[] = {2,3,4,2};
		for(int i=0;i<4;i++) {
		System.out.println(A[i]);
		}
	
		System.out.println("Don't know the values to be initialized");
        int B[]=new int[4];
        B[0] =2;
        B[1] =3;
        B[2] =4;
        B[3] =2;
        for(int i =0;i<4;i++) {
        	System.out.println(B[i]);
        }
        
        System.out.println("Enhanced For loop : Works after Java 1.5");
  
        for(int i:B) {
        	System.out.println(i);
        }
        
        /* 2D-Array
        * 1 2 3 4
        * 2 6 5 4
        * 8 9 6 5
        */
        System.out.println("2D-Array");
        
        int k[][] = {{1,2,3},{2,5,6},{7,8,9}};
        for(int i=0;i<3;i++) {
        	for(int j=0;j<3;j++) {
        		System.out.print(k[i][j]+" ");
        	}
        	System.out.println();
        	
        }
        
        System.out.println("Enhanced For loop for 2D-Array: Works after Java 1.5");
        int K[][]=new int[3][3];
        int x=1;
        for(int i[]:k) {
        	for(int j:i) {
        		j=x++;
        	}        	
        }
        
        for(int i[]:k) {
        	for(int j:i) {
        		System.out.print(j+" ");
        	}
        	System.out.println();
        	
        }
        
#Code End#

